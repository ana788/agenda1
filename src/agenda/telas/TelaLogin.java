package agenda.telas;

import agenda.classes.ConnectionFactory;
import java.awt.event.KeyEvent;
import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author cg3021157
 */
public class TelaLogin extends javax.swing.JFrame {

    Connection con;
    int idUsuario;
    String usuarioBD, senhaBD;

    public TelaLogin() {
        super("Login");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLogin = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        bttEntrar = new javax.swing.JButton();
        bttCriarUsuario = new javax.swing.JButton();
        jSenha = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        salvarLogin = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setResizable(false);
        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formPropertyChange(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Bodoni MT", 1, 24)); // NOI18N
        jLabel1.setText("LOGIN");

        jLabel2.setFont(new java.awt.Font("Bodoni MT", 1, 24)); // NOI18N
        jLabel2.setText("SENHA");

        jLogin.setFont(new java.awt.Font("Bodoni MT", 0, 18)); // NOI18N
        jLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLogin.setDoubleBuffered(true);
        jLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLoginActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Bodoni MT", 1, 80)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/agenda/Icones/calendariog.png"))); // NOI18N
        jLabel3.setText("Agenda");

        bttEntrar.setFont(new java.awt.Font("Bodoni MT", 0, 24)); // NOI18N
        bttEntrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/agenda/Icones/enter.png"))); // NOI18N
        bttEntrar.setText("Entar");
        bttEntrar.setRequestFocusEnabled(false);
        bttEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttEntrarActionPerformed(evt);
            }
        });

        bttCriarUsuario.setFont(new java.awt.Font("Bodoni MT", 0, 24)); // NOI18N
        bttCriarUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/agenda/Icones/adicionar-usuario.png"))); // NOI18N
        bttCriarUsuario.setText("Criar Usu√°rio");
        bttCriarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttCriarUsuarioActionPerformed(evt);
            }
        });

        jSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jSenhaKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Bodoni MT", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 51, 0));

        salvarLogin.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        salvarLogin.setText("Lembrar Login");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bttCriarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bttEntrar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(salvarLogin))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(151, 151, 151))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(salvarLogin))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttCriarUsuario)
                    .addComponent(bttEntrar))
                .addGap(63, 63, 63))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLogin, jSenha});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLoginActionPerformed

    private void bttEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttEntrarActionPerformed
        if (salvarLogin.isSelected()) {
            salvarsessao();
            try {
                login();
            } catch (SQLException ex) {
                Logger.getLogger(TelaLogin.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                login();
            } catch (SQLException ex) {
                Logger.getLogger(TelaLogin.class.getName()).log(Level.SEVERE, null, ex);
            }
            salvarsessao();
        }

    }//GEN-LAST:event_bttEntrarActionPerformed

    private void bttCriarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttCriarUsuarioActionPerformed
        TelaCriarUsuario tcUsuario = new TelaCriarUsuario();
        this.setVisible(false);
        tcUsuario.setVisible(true);
    }//GEN-LAST:event_bttCriarUsuarioActionPerformed

    private void formPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_formPropertyChange
        this.setLocationRelativeTo(null);
        this.setResizable(false);

        bttEntrar.setBorderPainted(false);
        bttEntrar.setContentAreaFilled(false);
        bttEntrar.setFocusPainted(false);

        bttCriarUsuario.setBorderPainted(false);
        bttCriarUsuario.setContentAreaFilled(false);
        bttCriarUsuario.setFocusPainted(false);

        jLogin.requestFocus(true);
        jLogin.grabFocus();

        try {
            lembrarlogin();
        } catch (SQLException ex) {
            Logger.getLogger(TelaLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formPropertyChange

    private void jSenhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSenhaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            if (salvarLogin.isSelected()) {
                salvarsessao();
                try {
                    login();
                } catch (SQLException ex) {
                    Logger.getLogger(TelaLogin.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                try {
                    login();
                } catch (SQLException ex) {
                    Logger.getLogger(TelaLogin.class.getName()).log(Level.SEVERE, null, ex);
                }
                salvarsessao();
            }
        }
    }//GEN-LAST:event_jSenhaKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaLogin().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttCriarUsuario;
    private javax.swing.JButton bttEntrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jLogin;
    private javax.swing.JPasswordField jSenha;
    private javax.swing.JCheckBox salvarLogin;
    // End of variables declaration//GEN-END:variables

    private void salvarlog(int idUsuario) throws SQLException {
        String query = "INSERT INTO LOGS_LOGIN(ID_LOG, ID_USUARIO, CON)VALUES(default, ?, ?);";

        PreparedStatement ps;
        ResultSet rs;

        ConnectionFactory cf = new ConnectionFactory();
        con = ConnectionFactory.getConnection();
        con.setAutoCommit(false);
        ps = con.prepareStatement(query);

        ps.setInt(1, idUsuario);
        ps.setInt(2, 1);

        ps.execute();
        con.commit();

    }

    private void login() throws SQLException {
        String query = "SELECT  ID_USUARIO, USUARIO, SENHA from login WHERE USUARIO = ? AND SENHA = ?";
        PreparedStatement ps;
        ResultSet rs;
        String usuario = this.jLogin.getText();
        String senha_string = new String(jSenha.getPassword());

        if ("".equals(jLogin.getText()) || "".equals(senha_string)) {
            jLabel4.setText("Usu√°rio e senha n√£o podem estar vazios!");
        } else {
            jLabel4.setText("");
            try {
                if (salvarLogin.isSelected()) {

                    ConnectionFactory cf = new ConnectionFactory();
                    con = cf.getConnection();
                    con.setAutoCommit(false);
                    ps = con.prepareStatement(query);
                    ps.setString(1, jLogin.getText());
                    ps.setString(2, senha_string);
                    rs = ps.executeQuery();
                    con.commit();

                    while (rs.next()) {
                        idUsuario = rs.getInt("ID_USUARIO");
                        usuarioBD = rs.getString("USUARIO");
                        senhaBD = rs.getString("SENHA");

                        if (senha_string.equals(senhaBD)) {

                            salvarlog(idUsuario);

                            this.setVisible(false);

                            TelaPrincipal tela = new TelaPrincipal();
                            tela.setLocationRelativeTo(null);
                            tela.setResizable(false);
                            tela.setExtendedState(JFrame.MAXIMIZED_BOTH);
                            tela.setVisible(true);

                            JOptionPane.showMessageDialog(null, "Login efetuado com sucesso!");
                            ps.close();
                        }
                    }
                }
                MessageDigest cryptSenha = MessageDigest.getInstance("SHA-256");
                byte messageDigestSenha[] = cryptSenha.digest(String.valueOf(this.jSenha.getPassword()).getBytes("UTF-8"));

                StringBuilder hexString = new StringBuilder();
                for (byte b : messageDigestSenha) {
                    hexString.append(String.format("%02X", 0xFF & b));
                }
                String senha_crip = hexString.toString();

                if (senha_string.equals(senhaBD)) {
                    senha_crip = senha_string;
                }

                con.setAutoCommit(false);
                ps = con.prepareStatement(query);
                ps.setString(1, usuario);
                ps.setString(2, senha_crip);
                rs = ps.executeQuery();
                con.commit();

                while (rs.next()) {
                    idUsuario = rs.getInt("ID_USUARIO");
                    usuarioBD = rs.getString("USUARIO");
                    senhaBD = rs.getString("SENHA");

                    if (senha_crip.equals(senhaBD)) {

                        salvarlog(idUsuario);

                        this.setVisible(false);
                        TelaPrincipal tela = new TelaPrincipal();
                        tela.setLocationRelativeTo(null);
                        tela.setResizable(false);
                        tela.setExtendedState(JFrame.MAXIMIZED_BOTH);
                        tela.setVisible(true);

                        JOptionPane.showMessageDialog(null, "Login efetuado com sucesso!");
                    }
                }
                jLabel4.setText("Usu√°rio ou senha inv√°lidos");
                ps.close();

            } catch (SQLException ex) {

            } catch (NoSuchAlgorithmException | UnsupportedEncodingException ex) {
                Logger.getLogger(TelaLogin.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }

    private void lembrarlogin() throws SQLException {
        String query = "SELECT  ID_USUARIO, USUARIO, SENHA from login WHERE FLAG = 1;";

        PreparedStatement ps;
        ResultSet rs;

        ConnectionFactory cf = new ConnectionFactory();
        con = cf.getConnection();
        con.setAutoCommit(false);
        ps = con.prepareStatement(query);
        rs = ps.executeQuery();
        con.commit();

        while (rs.next()) {
            idUsuario = rs.getInt("ID_USUARIO");
            usuarioBD = rs.getString("USUARIO");
            senhaBD = rs.getString("SENHA");

            jLogin.setText(usuarioBD);
            jSenha.setText(senhaBD);
            salvarLogin.setSelected(true);
        }

    }

    private void salvarsessao() {

        String usuario = jLogin.getText();
        String safe = "SET SQL_SAFE_UPDATES = 0;";
        PreparedStatement ps;

        try {
            con = ConnectionFactory.getConnection();
            con.setAutoCommit(false);
            ps = con.prepareStatement(safe);
            ps.execute();
            con.commit();
            ps.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

        if (salvarLogin.isSelected()) {

            String query = "update login set flag = 1 where usuario = ?;";

            try {
                con = ConnectionFactory.getConnection();
                con.setAutoCommit(false);

                ps = con.prepareStatement(query);
                ps.setString(1, usuario);
                ps.executeUpdate();

                con.commit();
                ps.close();

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        } else {
            String query = "update login set flag = 0 where usuario = ?;";

            try {
                con = ConnectionFactory.getConnection();
                con.setAutoCommit(false);
                ps = con.prepareStatement(query);
                ps.setString(1, usuario);
                ps.executeUpdate();

                con.commit();
                ps.close();

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
        String safe1 = "SET SQL_SAFE_UPDATES = 1;";

        try {
            con = ConnectionFactory.getConnection();
            con.setAutoCommit(false);
            ps = con.prepareStatement(safe1);
            ps.execute();
            con.commit();
            ps.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }
}
